import inscripcionesSinBonus.*



// MATERIAS Y CARRERAS

    const objetos1        = new Materia(nombreMateria="Programacion con Objetos 1", cupoMaximo = 6)
    const objetos2        = new Materia (nombreMateria= "Programacion Con objetos 2",cupoMaximo = 3, requisitos = #{objetos1,matematica1} )
    const objetos3        = new Materia( nombreMateria="Programacion con Objetos 3",cupoMaximo = 3, requisitos = #{objetos2,bbdd})
    const matematica1     = new Materia(nombreMateria= "Matematica 1",cupoMaximo= 3)
    const bbdd            = new Materia (nombreMateria="Bases de Datos",cupoMaximo= 10, requisitos=#{})
    const progConcurrente = new Materia(nombreMateria="Programacion Concurrente",cupoMaximo=4, requisitos=#{objetos1,bbdd})
    const biologia1       = new Materia(nombreMateria = "Biologia 1",cupoMaximo=3)
    const biologia2       = new Materia(nombreMateria="Bologia 2",cupoMaximo=4,requisitos=#{biologia1})
    const ep              = new Materia(nombreMateria="Elementos de Programacion",cupoMaximo=4)
    const quimica         = new Materia(nombreMateria="Quimica", cupoMaximo=4)
    const trabajoFinal    = new Materia(nombreMateria = "Trabajo Final",cupoMaximo=4)
    const anatomiaGeneral = new Materia(nombreMateria = "Anatomia Genral",cupoMaximo=5)
    const latin           = new Materia(nombreMateria = "Latin", cupoMaximo=6)
    const derechoRomano   = new Materia(nombreMateria="Derecho Romano", cupoMaximo=10)
    const hda             = new Materia(nombreMateria="Historia del Derecho Argentino",cupoMaximo=5)
    const derechoPenal1   = new Materia(nombreMateria="Derecho Penal 1",cupoMaximo=3)
    const derechoPenal2   = new Materia(nombreMateria="Derecho Penal 2",cupoMaximo=3)

    const programacion = new Carrera(materiasCarrera= #{ep,matematica1,objetos1,objetos2,objetos3,trabajoFinal,bbdd,progConcurrente})
    const medicina = new Carrera(materiasCarrera=#{quimica,biologia1,biologia2,anatomiaGeneral})
    const derecho = new Carrera(materiasCarrera=#{latin,derechoRomano,hda,derechoPenal1,derechoPenal2})

// ALUMNOS

    const roque= new Estudiante()
    const luisa = new Estudiante()
    const romina = new Estudiante()
    const alicia = new Estudiante()
    const ana = new Estudiante()

/*#################################################################################################
                                                 TEST
###################################################################################################*/

describe "Inscripciones"{

   

     method initialize(){ 
        //Inscripcion alumnos
        roque.inscribirACarrera(programacion)
        roque.inscribirACarrera(medicina)

        luisa.inscribirACarrera(programacion)
        romina.inscribirACarrera(programacion)
        alicia.inscribirACarrera(programacion)
        ana.inscribirACarrera(programacion)

        // Roque tiene aprobada estas materias
        ep.inscribirAlumno(roque)
        matematica1.inscribir(roque)
        objetos1.inscribir(roque)
        bbdd.inscribir(roque)
        quimica.inscribir(roque)
        biologia1.inscribir(roque)

        ep.aprobarEstudiante(roque,10)
        matematica1.aprobarEstudiante(roque, 7)
        objetos1.aprobarEstudiante(roque,9)
        bbdd.aprobarEstudiante(roque,6)
        quimica.aprobarEstudiante(roque,10)
        biologia1.aprobarEstudiante(roque,8)

        // luisa,romina y alicia tienen aprobadas estas materias

        ep.inscribir(luisa)
        ep.inscribir(romina)
        ep.inscribir(alicia)

        objetos1.inscribir(luisa)
        objetos1.inscribir(romina)
        objetos1.inscribir(alicia)

        matematica1.inscribir(luisa)
        matematica1.inscribir(romina)
        matematica1.inscribir(alicia)

        ep.aprobarEstudiante(luisa, 10)
        ep.aprobarEstudiante(romina, 9)
        ep.aprobarEstudiante(alicia, 8)

        objetos1.aprobarEstudiante(luisa, 10)
        objetos1.aprobarEstudiante(romina, 9)
        objetos1.aprobarEstudiante(alicia, 8)

        matematica1.aprobarEstudiante(luisa, 10)
        matematica1.aprobarEstudiante(romina, 9)
        matematica1.aprobarEstudiante(alicia, 8)
        

     }

     test "Roque puede inscribirse en Objetos 2, pero no en Objetos 3 (porque le falta Objetos 2) ni en Objetos 1 (porque ya la tiene aprobada)."{
        assert.that(roque.sePuedeInscribir(objetos2))
        assert.notThat(roque.sePuedeInscribir(objetos3))
        assert.notThat(roque.sePuedeInscribir(objetos1))


     }

    test "Roque puede inscribirse: en Programación, en Objetos 2 y Programación Concurrente; en Medicina, en Biología 2."{

       assert.that(roque.sePuedeInscribir(objetos2))
       assert.that(roque.sePuedeInscribir(progConcurrente))

       assert.that(roque.sePuedeInscribir(biologia2))


    }

    test "Si se inscriben, en este orden, Luisa, Romina, Alicia y Roque en Objetos 2, entonces las tres primeras quedan confirmadas, y Roque queda en lista de espera."{
        objetos2.inscribir(luisa)
        objetos2.inscribir(romina)

        objetos2.inscribir(alicia)
        objetos2.inscribir(roque)

        assert.that(luisa.estaInscripto(objetos2))
        assert.that(romina.estaInscripto(objetos2))
        assert.that(alicia.estaInscripto(objetos2))
       
        assert.that(objetos2.estaEnListaDeEspera(roque))
        
    }

    test "Si después se da de baja Romina en Objetos 2, entonces Roque pasa a tener la inscripción confirmada en esa materia."{
        objetos2.inscribir(luisa)
        objetos2.inscribir(romina)
        objetos2.inscribir(alicia)
        objetos2.inscribir(roque)

        objetos2.darDeBaja(romina)

        assert.that(roque.estaInscripto(objetos2))
    }
}
     


